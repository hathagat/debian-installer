#!/bin/bash
# Compatible with Ubuntu 16.04 Xenial and Debian 9.x Stretch
#
	# This program is free software; you can redistribute it and/or modify
    # it under the terms of the GNU General Public License as published by
    # the Free Software Foundation; either version 2 of the License, or
    # (at your option) any later version.

    # This program is distributed in the hope that it will be useful,
    # but WITHOUT ANY WARRANTY; without even the implied warranty of
    # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    # GNU General Public License for more details.

    # You should have received a copy of the GNU General Public License along
    # with this program; if not, write to the Free Software Foundation, Inc.,
    # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#-------------------------------------------------------------------------------------------------------------
#GlobalScriptPath
SCRIPT_PATH="/root/NeXt-Server"

OLD_BACKUP_FILES=3

# --------------------------------------------------------------------------------------------------------------------------------------------------

mkdir /etc/nginx/backups/

# Variable deklarieren
datum=$(date +"%d-%m-%Y_%H_%M_%S")
PATH_TO_PASSWORDS="${SCRIPT_PATH}/login_information"
PATH_TO_WEBFOLDER="/etc/nginx/html"
BACKUP_PATH="/etc/nginx/backups/$datum"
MYSQL_USER="root"

MAX_SPACE=$(df -Th /dev/sda3 | tail -1 | awk '{print $3}' | sed '$s/.$//')
USED_SPACE=$(df -Th /dev/sda3 | tail -1 | awk '{print $4}' | sed '$s/.$//')
FREE_SPACE=$(df -Th /dev/sda3 | tail -1 | awk '{print $5}' | sed '$s/.$//')
USED_HTML_SPACE=$(du -hs /etc/nginx/html/ | tail -1 | awk '{print $1}' | sed '$s/.$//')
# --------------------------------------------------------------------------------------------------------------------------------------------------
#Read MYSQL_ROOT_PASS from login_information
MYSQL_ROOT_PASS=$(grep -Pom 1 "(?<=^MYSQL_ROOT_PASS: ).*$" ${SCRIPT_PATH}/login_information)
MYSQL=/usr/bin/mysql
MYSQLDUMP=/usr/bin/mysqldump


# --------------------------------------------------------------------------------------------------------------------------------------------------
# ToDo
# Check disk space !
# --------------------------------------------------------------------------------------------------------------------------------------------------
if [ "$USED_SPACE" -gt "$FREE_SPACE" ]; then
	# Todo:
	# Sent mail
	exit 0
fi
# --------------------------------------------------------------------------------------------------------------------------------------------------


mkdir -p $BACKUP_PATH
mkdir -p $BACKUP_PATH/DATABESES
mkdir -p $BACKUP_PATH/FTPBACKUP
mkdir -p /root/logs/

touch ${SCRIPT_PATH}/logs/stdoutBACKUP.log
touch ${SCRIPT_PATH}/logs/stderrorBACKUP.log

# --------------------------------------------------------------------------------------------------------------------------------------------------
databases=`$MYSQL --user=$MYSQL_USER -p$MYSQL_ROOT_PASS -e "SHOW DATABASES;" | grep -Ev "(Database|mysql|information_schema|performance_schema)"`
for db in $databases; do
#echo "${info} Backup Database $db" | awk '{ print strftime("[%H:%M:%S] |"), $0 }'
  $MYSQLDUMP --force --opt --user=$MYSQL_USER -p$MYSQL_ROOT_PASS --databases $db | gzip > "$BACKUP_PATH/DATABESES/$db-$datum.tgz"
done
# --------------------------------------------------------------------------------------------------------------------------------------------------
cd $PATH_TO_WEBFOLDER
# ToDo:
# fix folders var and dont use ls
folders=`for i in $(ls -d */ | grep -Ev "(backups)"); do echo ${i%%/}; done`
for ftp in $folders; do
cd $ftp
  #tar -cvvzf $ftp-$datum.tar.gz *
  tar -cvvzf "$BACKUP_PATH/FTPBACKUP/$ftp-$datum.tgz" * >>/root/logs/stderrorBACKUP.log 2>&1 >>/root/logs/stdoutBACKUP.log
  cd $PATH_TO_WEBFOLDER
done
cd /root
# --------------------------------------------------------------------------------------------------------------------------------------------------
apt-get update -y >/dev/null 2>&1
apt-get upgrade -y >/dev/null 2>&1

find /etc/nginx/backups/* -type d -ctime +${OLD_BACKUP_FILES} | xargs rm -rf
